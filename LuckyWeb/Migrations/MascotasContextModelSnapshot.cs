// <auto-generated />
using System;
using LuckyWeb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LuckyWeb.Migrations
{
    [DbContext(typeof(MascotasContext))]
    partial class MascotasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LuckyWeb.Models.Agenda", b =>
                {
                    b.Property<int>("IDagenda")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EntrevistaIDentrevistas");

                    b.Property<DateTime>("FechaAgenda");

                    b.Property<Guid>("IDuser");

                    b.HasKey("IDagenda");

                    b.HasIndex("EntrevistaIDentrevistas");

                    b.HasIndex("IDuser");

                    b.ToTable("tbl_Agenda");
                });

            modelBuilder.Entity("LuckyWeb.Models.Entrega", b =>
                {
                    b.Property<int>("IDentrega")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Detalle")
                        .IsRequired();

                    b.Property<bool>("Estado");

                    b.Property<int>("IDinforme");

                    b.HasKey("IDentrega");

                    b.HasIndex("IDinforme");

                    b.ToTable("tbl_Entrega");
                });

            modelBuilder.Entity("LuckyWeb.Models.Entrevista", b =>
                {
                    b.Property<int>("IDentrevistas")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EstadoEntrevista");

                    b.Property<int>("IDagenda");

                    b.Property<Guid>("IDuser");

                    b.Property<int?>("PruebaIDprueba");

                    b.HasKey("IDentrevistas");

                    b.HasIndex("IDagenda");

                    b.HasIndex("IDuser");

                    b.HasIndex("PruebaIDprueba");

                    b.ToTable("tbl_Entrevista");
                });

            modelBuilder.Entity("LuckyWeb.Models.EstadoMascota", b =>
                {
                    b.Property<Guid>("IDestadoMascota")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aprobacion");

                    b.HasKey("IDestadoMascota");

                    b.ToTable("tbl_EstadoMascota");
                });

            modelBuilder.Entity("LuckyWeb.Models.Esterilizado", b =>
                {
                    b.Property<Guid>("IDesterilizad")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EstadoEsterilizado");

                    b.HasKey("IDesterilizad");

                    b.ToTable("tbl_Esterilizado");
                });

            modelBuilder.Entity("LuckyWeb.Models.FormularioEncuesta", b =>
                {
                    b.Property<int>("IDformularioEncuesta")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IDmascota");

                    b.Property<Guid>("IDpreguntas");

                    b.Property<Guid>("IDuser");

                    b.HasKey("IDformularioEncuesta");

                    b.HasIndex("IDmascota");

                    b.HasIndex("IDpreguntas");

                    b.HasIndex("IDuser");

                    b.ToTable("tbl_FormularioEncuesta");
                });

            modelBuilder.Entity("LuckyWeb.Models.Informe", b =>
                {
                    b.Property<int>("IDinforme")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Detalle");

                    b.Property<int>("IDprueba");

                    b.HasKey("IDinforme");

                    b.HasIndex("IDprueba");

                    b.ToTable("tbl_Informe");
                });

            modelBuilder.Entity("LuckyWeb.Models.Mascota", b =>
                {
                    b.Property<Guid>("IdMascota")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EdadMascota");

                    b.Property<Guid>("IDestadoMascota");

                    b.Property<Guid>("IDesterilizado");

                    b.Property<Guid>("IDraza");

                    b.Property<string>("Imagen");

                    b.Property<string>("NombreMascota")
                        .IsRequired();

                    b.HasKey("IdMascota");

                    b.HasIndex("IDestadoMascota");

                    b.HasIndex("IDesterilizado");

                    b.HasIndex("IDraza");

                    b.ToTable("tbl_Mascota");
                });

            modelBuilder.Entity("LuckyWeb.Models.Pregunta", b =>
                {
                    b.Property<Guid>("IDpreguntas")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EstadoPreguntas");

                    b.Property<Guid>("IDrespuesta1");

                    b.Property<Guid>("IDrespuesta10");

                    b.Property<Guid>("IDrespuesta2");

                    b.Property<Guid>("IDrespuesta3");

                    b.Property<Guid>("IDrespuesta4");

                    b.Property<Guid>("IDrespuesta5");

                    b.Property<Guid>("IDrespuesta6");

                    b.Property<Guid>("IDrespuesta7");

                    b.Property<Guid>("IDrespuesta8");

                    b.Property<Guid>("IDrespuesta9");

                    b.HasKey("IDpreguntas");

                    b.HasIndex("IDrespuesta1");

                    b.HasIndex("IDrespuesta10");

                    b.HasIndex("IDrespuesta2");

                    b.HasIndex("IDrespuesta3");

                    b.HasIndex("IDrespuesta4");

                    b.HasIndex("IDrespuesta5");

                    b.HasIndex("IDrespuesta6");

                    b.HasIndex("IDrespuesta7");

                    b.HasIndex("IDrespuesta8");

                    b.HasIndex("IDrespuesta9");

                    b.ToTable("tbl_Pregunta");
                });

            modelBuilder.Entity("LuckyWeb.Models.Prueba", b =>
                {
                    b.Property<int>("IDprueba")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EstadoPrueba");

                    b.Property<int>("IDentrevista");

                    b.HasKey("IDprueba");

                    b.HasIndex("IDentrevista");

                    b.ToTable("tbl_Prueba");
                });

            modelBuilder.Entity("LuckyWeb.Models.Raza", b =>
                {
                    b.Property<Guid>("IDraza")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RazaMascota");

                    b.HasKey("IDraza");

                    b.ToTable("tbl_Raza");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta1", b =>
                {
                    b.Property<Guid>("IDrespuesta1")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta1");

                    b.ToTable("tbl_Respuesta1");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta10", b =>
                {
                    b.Property<Guid>("IDrespuesta10")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta10");

                    b.ToTable("tbl_Respuesta10");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta2", b =>
                {
                    b.Property<Guid>("IDrespuesta2")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta2");

                    b.ToTable("tbl_Respuesta2");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta3", b =>
                {
                    b.Property<Guid>("IDrespuesta3")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta3");

                    b.ToTable("tbl_Respuesta3");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta4", b =>
                {
                    b.Property<Guid>("IDrespuesta4")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta4");

                    b.ToTable("tbl_Respuesta4");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta5", b =>
                {
                    b.Property<Guid>("IDrespuesta5")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta5");

                    b.ToTable("tbl_Respuesta5");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta6", b =>
                {
                    b.Property<Guid>("IDrespuesta6")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta6");

                    b.ToTable("tbl_Respuesta6");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta7", b =>
                {
                    b.Property<Guid>("IDrespuesta7")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta7");

                    b.ToTable("tbl_Respuesta7");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta8", b =>
                {
                    b.Property<Guid>("IDrespuesta8")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta8");

                    b.ToTable("tbl_Respuesta8");
                });

            modelBuilder.Entity("LuckyWeb.Models.Respuestas.Respuesta9", b =>
                {
                    b.Property<Guid>("IDrespuesta9")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Respuesta");

                    b.HasKey("IDrespuesta9");

                    b.ToTable("tbl_Respuesta9");
                });

            modelBuilder.Entity("LuckyWeb.Models.User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido")
                        .IsRequired();

                    b.Property<string>("Cedula")
                        .IsRequired();

                    b.Property<string>("Contrasenia");

                    b.Property<string>("Correo")
                        .IsRequired();

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("IdUser");

                    b.ToTable("tbl_User");
                });

            modelBuilder.Entity("LuckyWeb.Models.Agenda", b =>
                {
                    b.HasOne("LuckyWeb.Models.Entrevista")
                        .WithMany("Agendas")
                        .HasForeignKey("EntrevistaIDentrevistas");

                    b.HasOne("LuckyWeb.Models.User", "FK_UserAgenda")
                        .WithMany()
                        .HasForeignKey("IDuser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LuckyWeb.Models.Entrega", b =>
                {
                    b.HasOne("LuckyWeb.Models.Informe", "FK_InformeEntrega")
                        .WithMany()
                        .HasForeignKey("IDinforme")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LuckyWeb.Models.Entrevista", b =>
                {
                    b.HasOne("LuckyWeb.Models.Agenda", "FK_AgendaEntrevista")
                        .WithMany()
                        .HasForeignKey("IDagenda")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.User", "FK_UserEntrevista")
                        .WithMany()
                        .HasForeignKey("IDuser")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Prueba")
                        .WithMany("Entrevistas")
                        .HasForeignKey("PruebaIDprueba");
                });

            modelBuilder.Entity("LuckyWeb.Models.FormularioEncuesta", b =>
                {
                    b.HasOne("LuckyWeb.Models.Mascota", "FK_MascotaFormularioEncuesta")
                        .WithMany()
                        .HasForeignKey("IDmascota")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Pregunta", "FK_PreguntaFormularioEncuesta")
                        .WithMany()
                        .HasForeignKey("IDpreguntas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.User", "FK_UserFormularioEncuesta")
                        .WithMany("FormularioEncuestas")
                        .HasForeignKey("IDuser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LuckyWeb.Models.Informe", b =>
                {
                    b.HasOne("LuckyWeb.Models.Prueba", "FK_PruebaInforme")
                        .WithMany()
                        .HasForeignKey("IDprueba")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LuckyWeb.Models.Mascota", b =>
                {
                    b.HasOne("LuckyWeb.Models.EstadoMascota", "FK_EstadoMascotaMascota")
                        .WithMany()
                        .HasForeignKey("IDestadoMascota")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Esterilizado", "FK_EsterilizadoMascota")
                        .WithMany()
                        .HasForeignKey("IDesterilizado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Raza", "FK_RazaMascota")
                        .WithMany()
                        .HasForeignKey("IDraza")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LuckyWeb.Models.Pregunta", b =>
                {
                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta1", "FK_Respuesta1Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta10", "FK_Respuesta10Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta10")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta2", "FK_Respuesta2Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta2")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta3", "FK_Respuesta3Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta3")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta4", "FK_Respuesta4Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta4")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta5", "FK_Respuesta5Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta5")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta6", "FK_Respuesta6Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta6")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta7", "FK_Respuesta7Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta7")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta8", "FK_Respuesta8Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta8")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LuckyWeb.Models.Respuestas.Respuesta9", "FK_Respuesta9Pregunta")
                        .WithMany()
                        .HasForeignKey("IDrespuesta9")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LuckyWeb.Models.Prueba", b =>
                {
                    b.HasOne("LuckyWeb.Models.Entrevista", "FK_EntrevistaPrueba")
                        .WithMany()
                        .HasForeignKey("IDentrevista")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
